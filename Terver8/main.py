from scipy import stats as s
import numpy as np

'''
Задача 1.
Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
а) Найдите ковариацию этих двух величин с помощью элементарных действий
б) С помощью функции cov из numpy. Полученные значения должны быть равны.
в) Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков, 
г) С использованием функций из библиотек numpy и pandas.

'''
zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
cov = np.mean(zp*ks) - np.mean(zp) * np.mean(ks)
print('Задача 1.')
print(f'а) cov = {round(cov, 2)}')
print(f'б) cov = {np.cov(zp, ks, ddof=0)}')
print(f'в) rzp_ks = {cov / (np.std(zp, ddof=0) * np.std(ks, ddof=0))}')
print(f'г) rzp_ks = {np.corrcoef(zp, ks)}')

'''
Задача 2.
Измерены значения IQ выборки студентов, обучающихся в местных технических вузах:
131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
Известно, что в генеральной совокупности IQ распределен нормально.
Найдите доверительный интервал для математического ожидания с надежностью 0.95.
'''
a = 0.05
x = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
n = len(x)
xmean = np.mean(x)
q = np.std(x, ddof=1)
ta = s.t.ppf(1 - a / 2, n-1)
print('Задача 2.')
print(f'P({xmean - ta * q / n**0.5} < m < {xmean + ta * q / n**0.5}) = 0.95')

'''
Задача 3.
Известно, что рост футболистов в сборной распределен нормально с дисперсией генеральной совокупности, равной 25 кв.см. 
Объем выборки равен 27, среднее выборочное составляет 174.2. 
Найдите доверительный интервал для математического ожидания с надежностью 0.95.
'''
a = 0.05
n = 27
xmean = 174.2
d = 25
za = s.norm.ppf(1 - a / 2)
print('Задача 3.')
print(f'P({xmean - za * (d / n)**0.5} < m < {xmean + za * (d / n)**0.5}) = 0.95')
